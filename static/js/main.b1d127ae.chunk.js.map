{"version":3,"sources":["Pages/HomePage/HomePage.tsx","api/fetchFunction.tsx","Pages/TableContent/TableContent.tsx","Pages/TableHead/TableHead.tsx","Pages/utils/utils.tsx","utils/utils.tsx","Pages/PeoplePage/PeoplePage.tsx","customHooks/useDebounce.tsx","Pages/NotFoundPage/NotFoundPage.tsx","Pages/Header/Header.tsx","App.tsx","index.tsx"],"names":["Homepage","className","fetchFunction","a","fetch","res","result","ok","Error","status","statusText","json","map","el","newObject","fatherName","motherName","tableTitles","TableContent","person","slug","useSearchParams","background","sortBy","get","sex","backgroundTable","split","titles","TableHead","searchParams","setSearchParams","toLowerCase","onClick","set","clickHandler","filter","data","query","queryLC","check","name","includes","sortFoo","array","searchSortBy","sortOrder","sort","b","localeCompare","PeoplePage","useParams","useState","serverResponse","setServerResponse","people","setPeople","search","setSearch","debounceValue","value","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","updateHandler","inputQuery","undefined","searchFilter","then","length","catch","err","console","warn","message","placeholder","onChange","e","target","type","reverseAscendingOrder","NotFoundPage","Header","to","App","path","element","index","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1d127ae.chunk.js","sourcesContent":["import './HomePage.scss';\n\nexport const Homepage: React.FC = () => {\n  return (\n    <div className=\"HomePage\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import { People } from '../types/People';\n\nconst API = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const fetchFunction = async (): Promise<People[]> => {\n  const res = await fetch(API);\n\n  let result: People[] = [];\n\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  } else {\n    result = await res.json();\n\n    result = result.map(el => {\n      const newObject = { ...el };\n\n      if (newObject.fatherName === null) {\n        newObject.fatherName = '';\n      }\n\n      if (newObject.motherName === null) {\n        newObject.motherName = '';\n      }\n\n      return newObject;\n    });\n  }\n\n  return result;\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { People } from '../../types/People';\nimport './TableContent.scss';\n\ntype Props = {\n  person: People;\n  slug: string | undefined;\n};\n\nconst tableTitles = [\n  'name',\n  'sex',\n  'born',\n  'died',\n  'father',\n  'mother',\n  'slug'];\n\nexport const TableContent: React.FC<Props> = ({ person, slug }) => {\n  const [searchParams] = useSearchParams();\n\n  let background = '';\n  const sortBy = searchParams.get('sortBy');\n\n  if (slug && person.slug === slug) {\n    switch (person.sex) {\n      case 'm':\n        background = 'blue';\n        break;\n\n      case 'f':\n        background = 'red';\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n\n    <tr className={`person ${background}`}>\n      {\n        tableTitles.map(el => {\n          let backgroundTable = '';\n\n          if (sortBy === el) {\n            backgroundTable = 'highlighted';\n          }\n\n          if (el === 'father') {\n            return (\n              <td className={backgroundTable} key={el}>\n                {person.fatherName.split(' ')[0]}\n              </td>\n            );\n          }\n\n          if (el === 'mother') {\n            return (\n              <td className={backgroundTable} key={el}>\n                {person.motherName.split(' ')[0]}\n              </td>\n            );\n          }\n\n          return (\n            <td className={backgroundTable} key={el}>\n              {person[el as keyof People]}\n            </td>\n          );\n        })\n      }\n    </tr>\n  );\n};\n","import './TableHead.scss';\nimport { useSearchParams } from 'react-router-dom';\n\nconst titles = ['Name', 'Sex', 'Born', 'Died', 'Father', 'Mother', 'Slug'];\n\nexport const TableHead = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sortBy = searchParams.get('sortBy');\n\n  const clickHandler = (el: string):void => {\n    const sortOrder = searchParams.get('sortOrder');\n\n    if (sortOrder === 'asc' && sortBy === el.toLowerCase()) {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    searchParams.set('sortBy', el.toLowerCase());\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <tr\n      className=\"person\"\n    >\n      {\n        titles.map(el => {\n          return (\n            <th\n              key={el}\n              className={`headerField ${sortBy === el.toLowerCase() ? 'selected-header' : ''}`}\n              onClick={() => {\n                clickHandler(el);\n              }}\n            >\n              {el}\n            </th>\n          );\n        })\n      }\n    </tr>\n  );\n};\n","import { People } from '../../types/People';\n\nexport const filter = (data: People[], query: string): People[] => {\n  return data\n    .filter(el => {\n      const queryLC = query.toLowerCase();\n\n      let check = false;\n\n      if (el.name.toLowerCase().includes(queryLC)) {\n        check = true;\n      }\n\n      if (el.fatherName) {\n        if (el.fatherName.toLowerCase().includes(queryLC)) {\n          check = true;\n        }\n      }\n\n      if (el.motherName) {\n        if (el.motherName.toLowerCase().includes(queryLC)) {\n          check = true;\n        }\n      }\n\n      return check;\n    });\n};\n","import { People } from '../types/People';\n\nexport const filter = (data: People[], query: string): People[] => {\n  return data\n    .filter(el => {\n      const queryLC = query.toLowerCase();\n\n      let check = false;\n\n      if (el.name.toLowerCase().includes(queryLC)) {\n        check = true;\n      }\n\n      if (el.fatherName) {\n        if (el.fatherName.toLowerCase().includes(queryLC)) {\n          check = true;\n        }\n      }\n\n      if (el.motherName) {\n        if (el.motherName.toLowerCase().includes(queryLC)) {\n          check = true;\n        }\n      }\n\n      return check;\n    });\n};\n\nconst sortFoo\n= (array: People[],\n  searchSortBy: string | null,\n  sortOrder: string): People[] => {\n  if (searchSortBy === null) {\n    return array;\n  }\n\n  const sortedArray = array.sort((a, b) => {\n    switch (searchSortBy) {\n      case 'born':\n      case 'died':\n        if (sortOrder === 'asc') {\n          return a[searchSortBy] - b[searchSortBy];\n        }\n\n        return b[searchSortBy] - a[searchSortBy];\n      case 'name':\n      case 'sex':\n      case 'slug':\n        if (sortOrder === 'asc') {\n          return a[searchSortBy].localeCompare(b[searchSortBy]);\n        }\n\n        return b[searchSortBy].localeCompare(a[searchSortBy]);\n      case 'mother':\n        if (sortOrder === 'asc') {\n          return a.motherName.localeCompare(b.motherName);\n        }\n\n        return b.motherName.localeCompare(a.motherName);\n      case 'father':\n        if (sortOrder === 'asc') {\n          return a.fatherName.localeCompare(b.fatherName);\n        }\n\n        return b.fatherName.localeCompare(a.fatherName);\n      default:\n        return 0;\n    }\n  });\n\n  return sortedArray;\n};\n\nexport default sortFoo;\n","import { useParams, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchFunction } from '../../api/fetchFunction';\nimport { People } from '../../types/People';\nimport { TableContent } from '../TableContent/TableContent';\nimport { TableHead } from '../TableHead/TableHead';\nimport { filter } from '../utils/utils';\nimport sortFoo from '../../utils/utils';\nimport { useDebounce } from '../../customHooks/useDebounce';\nimport './PeoplePage.scss';\n\nexport const PeoplePage: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { slug } = useParams();\n  const [serverResponse, setServerResponse] = useState<People[]>([]);\n  const [people, setPeople] = useState<People[]>([]);\n  const [search, setSearch] = useState('');\n  const debounceValue: string = useDebounce<string>(search, 500);\n\n  // eslint-disable-next-line max-len\n  const updateHandler = (array: People[], inputQuery: string | undefined = undefined) => {\n    let searchFilter = null;\n    let sortOrder = searchParams.get('sortOrder');\n\n    if (sortOrder === null) {\n      sortOrder = 'asc';\n    }\n\n    if (inputQuery) {\n      searchFilter = inputQuery;\n    } else {\n      searchFilter = searchParams.get('query');\n    }\n\n    const searchSortBy = searchParams.get('sortBy');\n\n    if (searchFilter) {\n      setPeople(sortFoo(filter(array, searchFilter), searchSortBy, sortOrder));\n    } else {\n      setPeople(sortFoo(array, searchSortBy, sortOrder));\n    }\n  };\n\n  useEffect(() => {\n    fetchFunction()\n      .then(res => {\n        if (res.length > 0) {\n          setServerResponse(res);\n          updateHandler(res);\n        }\n      })\n      .catch(err => {\n        // eslint-disable-next-line no-console\n        console.warn(`${err.message}`);\n      });\n  }, [searchParams]);\n\n  const inputHandler = (value: string) => {\n    searchParams.set('query', value.toLowerCase());\n    setSearchParams(searchParams);\n\n    updateHandler(serverResponse, value);\n  };\n\n  const reverseAscendingOrder = () => {\n    const sortOrder = searchParams.get('sortOrder');\n\n    if (sortOrder === null || sortOrder === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n      setSearchParams(searchParams);\n    } else {\n      searchParams.set('sortOrder', 'asc');\n      setSearchParams(searchParams);\n    }\n  };\n\n  useEffect(() => {\n    inputHandler(search);\n  }, [debounceValue]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <input\n        className=\"input input-field\"\n        data-cy=\"filterInput\"\n        placeholder=\"Search...\"\n        onChange={(e) => {\n          setSearch(e.target.value);\n        }}\n        value={search}\n      />\n      <button\n        type=\"button\"\n        className=\"button button-position\"\n        onClick={() => {\n          reverseAscendingOrder();\n        }}\n      >\n        Reverse sorting order\n      </button>\n      <table className=\"table is-hoverable table-position\">\n        <thead>\n          <TableHead />\n        </thead>\n        <tbody>\n          {\n            people.length > 0 && (\n              people\n                .map(el => (\n                  <TableContent person={el} key={el.name} slug={slug} />\n                )))\n          }\n        </tbody>\n        <tfoot>\n          <TableHead />\n        </tfoot>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport function useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import './NotFoundPage.scss';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"NotFoundPage\">\n      <h1 className=\"title title-color\">Page not found</h1>\n    </div>\n  );\n};\n","import { Outlet, Link } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__links navbar is-success\">\n        <Link to=\"/\">\n          <h1 className=\"title is-4 is-spaced is-hoverable\">Home</h1>\n        </Link>\n        <Link to=\"/people\">\n          <h1 className=\"title is-4 is-spaced is-hoverable\">People</h1>\n        </Link>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n","import './App.scss';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { Homepage } from './Pages/HomePage/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './Pages/NotFoundPage/NotFoundPage';\nimport { Header } from './Pages/Header/Header';\n\nconst App = () => (\n  <div className=\"App\">\n    <Routes>\n      <Route path=\"/\" element={<Header />}>\n        <Route index element={<Homepage />} />\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}